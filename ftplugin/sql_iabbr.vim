" SQL filetype plugin file
" Language:	  SQL
" Maintainer: niris <nirisix at gmail dot com>
" Contributions:
"		Hari Krishna Dara <hari_vim at yahoo dot com>
"		Zak Beck <zak dot beck at e-peopleserve dot com>
"		Michael Brailsford <brailsmt at yahoo dot com>
" Last Change:	  2013-05-13 15:25:20
" Revision:	  1.6.0
" Download From:
"	https://github.com/dhcmrlchtdj/sql_iabbr.vim
"	http://vim.sourceforge.net/script.php?script_id=305 (before 1.6.0)
" Description:
"	Capitalizes the SQL keywords when not typed in comments or string constants.
"	To undo the previous immediate capitalization, press ^Xu. This will work
"	correctly only when you are still next to the word for which you want to
"	undo capitaliation and you have not left the insert mode since the
"	capitaliation was done.
" Installation:
"	install vundle(https://github.com/gmarik/vundle).
"	add `Bundle 'dhcmrlchtdj/sql_iabbr.vim'` to your vimrc.
"	run `:BundleInstall`.

if exists("b:did_sql_iabbr")
	finish
endif
let b:did_sql_iabbr = 1

" undo
inoremap <silent> <buffer> <C-X>u <C-W><C-R>=b:UndoBuffer<CR><C-V><Space>

function! SqlIab_ReplaceConditionally(original, replacement)
	" only replace outside of comments or strings (which map to constant)
	let elesyn = synIDtrans(synID(line("."), col(".") - 1, 0))
	if elesyn != hlID('Comment') && elesyn != hlID('Constant')
		let word = a:replacement
	else
		let word = a:original
	endif
	let b:UndoBuffer = a:original
	return word
endfunction


" from http://dev.mysql.com/doc/mysqld-version-reference/en/mysqld-version-reference-reservedwords-5-7.html
let b:replace_pair = {
			\"accessible": "ACCESSIBLE",
			\"add": "ADD",
			\"all": "ALL",
			\"alter": "ALTER",
			\"analyze": "ANALYZE",
			\"and": "AND",
			\"as": "AS",
			\"asc": "ASC",
			\"asensitive": "ASENSITIVE",
			\"before": "BEFORE",
			\"between": "BETWEEN",
			\"bigint": "BIGINT",
			\"binary": "BINARY",
			\"blob": "BLOB",
			\"both": "BOTH",
			\"by": "BY",
			\"call": "CALL",
			\"cascade": "CASCADE",
			\"case": "CASE",
			\"change": "CHANGE",
			\"char": "CHAR",
			\"character": "CHARACTER",
			\"check": "CHECK",
			\"collate": "COLLATE",
			\"column": "COLUMN",
			\"condition": "CONDITION",
			\"constraint": "CONSTRAINT",
			\"continue": "CONTINUE",
			\"convert": "CONVERT",
			\"create": "CREATE",
			\"cross": "CROSS",
			\"current_date": "CURRENT_DATE",
			\"current_time": "CURRENT_TIME",
			\"current_timestamp": "CURRENT_TIMESTAMP",
			\"current_user": "CURRENT_USER",
			\"cursor": "CURSOR",
			\"database": "DATABASE",
			\"databases": "DATABASES",
			\"day_hour": "DAY_HOUR",
			\"day_microsecond": "DAY_MICROSECOND",
			\"day_minute": "DAY_MINUTE",
			\"day_second": "DAY_SECOND",
			\"dec": "DEC",
			\"decimal": "DECIMAL",
			\"declare": "DECLARE",
			\"default": "DEFAULT",
			\"delayed": "DELAYED",
			\"delete": "DELETE",
			\"desc": "DESC",
			\"describe": "DESCRIBE",
			\"deterministic": "DETERMINISTIC",
			\"distinct": "DISTINCT",
			\"distinctrow": "DISTINCTROW",
			\"div": "DIV",
			\"double": "DOUBLE",
			\"drop": "DROP",
			\"dual": "DUAL",
			\"each": "EACH",
			\"else": "ELSE",
			\"elseif": "ELSEIF",
			\"enclosed": "ENCLOSED",
			\"escaped": "ESCAPED",
			\"exists": "EXISTS",
			\"exit": "EXIT",
			\"explain": "EXPLAIN",
			\"false": "FALSE",
			\"fetch": "FETCH",
			\"float": "FLOAT",
			\"float4": "FLOAT4",
			\"float8": "FLOAT8",
			\"for": "FOR",
			\"force": "FORCE",
			\"foreign": "FOREIGN",
			\"from": "FROM",
			\"fulltext": "FULLTEXT",
			\"get": "GET",
			\"grant": "GRANT",
			\"group": "GROUP",
			\"having": "HAVING",
			\"high_priority": "HIGH_PRIORITY",
			\"hour_microsecond": "HOUR_MICROSECOND",
			\"hour_minute": "HOUR_MINUTE",
			\"hour_second": "HOUR_SECOND",
			\"if": "IF",
			\"ignore": "IGNORE",
			\"in": "IN",
			\"index": "INDEX",
			\"infile": "INFILE",
			\"inner": "INNER",
			\"inout": "INOUT",
			\"insensitive": "INSENSITIVE",
			\"insert": "INSERT",
			\"int": "INT",
			\"int1": "INT1",
			\"int2": "INT2",
			\"int3": "INT3",
			\"int4": "INT4",
			\"int8": "INT8",
			\"integer": "INTEGER",
			\"interval": "INTERVAL",
			\"into": "INTO",
			\"io_after_gtids": "IO_AFTER_GTIDS",
			\"io_before_gtids": "IO_BEFORE_GTIDS",
			\"is": "IS",
			\"iterate": "ITERATE",
			\"join": "JOIN",
			\"key": "KEY",
			\"keys": "KEYS",
			\"kill": "KILL",
			\"leading": "LEADING",
			\"leave": "LEAVE",
			\"left": "LEFT",
			\"like": "LIKE",
			\"limit": "LIMIT",
			\"linear": "LINEAR",
			\"lines": "LINES",
			\"load": "LOAD",
			\"localtime": "LOCALTIME",
			\"localtimestamp": "LOCALTIMESTAMP",
			\"lock": "LOCK",
			\"long": "LONG",
			\"longblob": "LONGBLOB",
			\"longtext": "LONGTEXT",
			\"loop": "LOOP",
			\"low_priority": "LOW_PRIORITY",
			\"master_bind": "MASTER_BIND",
			\"master_ssl_verify_server_cert": "MASTER_SSL_VERIFY_SERVER_CERT",
			\"match": "MATCH",
			\"maxvalue": "MAXVALUE",
			\"mediumblob": "MEDIUMBLOB",
			\"mediumint": "MEDIUMINT",
			\"mediumtext": "MEDIUMTEXT",
			\"middleint": "MIDDLEINT",
			\"minute_microsecond": "MINUTE_MICROSECOND",
			\"minute_second": "MINUTE_SECOND",
			\"mod": "MOD",
			\"modifies": "MODIFIES",
			\"natural": "NATURAL",
			\"nonblocking": "NONBLOCKING",
			\"not": "NOT",
			\"no_write_to_binlog": "NO_WRITE_TO_BINLOG",
			\"null": "NULL",
			\"numeric": "NUMERIC",
			\"on": "ON",
			\"optimize": "OPTIMIZE",
			\"option": "OPTION",
			\"optionally": "OPTIONALLY",
			\"or": "OR",
			\"order": "ORDER",
			\"out": "OUT",
			\"outer": "OUTER",
			\"outfile": "OUTFILE",
			\"partition": "PARTITION",
			\"precision": "PRECISION",
			\"primary": "PRIMARY",
			\"procedure": "PROCEDURE",
			\"purge": "PURGE",
			\"range": "RANGE",
			\"read": "READ",
			\"reads": "READS",
			\"read_write": "READ_WRITE",
			\"real": "REAL",
			\"references": "REFERENCES",
			\"regexp": "REGEXP",
			\"release": "RELEASE",
			\"rename": "RENAME",
			\"repeat": "REPEAT",
			\"replace": "REPLACE",
			\"require": "REQUIRE",
			\"resignal": "RESIGNAL",
			\"restrict": "RESTRICT",
			\"return": "RETURN",
			\"revoke": "REVOKE",
			\"right": "RIGHT",
			\"rlike": "RLIKE",
			\"schema": "SCHEMA",
			\"schemas": "SCHEMAS",
			\"second_microsecond": "SECOND_MICROSECOND",
			\"select": "SELECT",
			\"sensitive": "SENSITIVE",
			\"separator": "SEPARATOR",
			\"set": "SET",
			\"show": "SHOW",
			\"signal": "SIGNAL",
			\"smallint": "SMALLINT",
			\"spatial": "SPATIAL",
			\"specific": "SPECIFIC",
			\"sql": "SQL",
			\"sqlexception": "SQLEXCEPTION",
			\"sqlstate": "SQLSTATE",
			\"sqlwarning": "SQLWARNING",
			\"sql_big_result": "SQL_BIG_RESULT",
			\"sql_calc_found_rows": "SQL_CALC_FOUND_ROWS",
			\"sql_small_result": "SQL_SMALL_RESULT",
			\"ssl": "SSL",
			\"starting": "STARTING",
			\"straight_join": "STRAIGHT_JOIN",
			\"table": "TABLE",
			\"terminated": "TERMINATED",
			\"then": "THEN",
			\"tinyblob": "TINYBLOB",
			\"tinyint": "TINYINT",
			\"tinytext": "TINYTEXT",
			\"to": "TO",
			\"trailing": "TRAILING",
			\"trigger": "TRIGGER",
			\"true": "TRUE",
			\"undo": "UNDO",
			\"union": "UNION",
			\"unique": "UNIQUE",
			\"unlock": "UNLOCK",
			\"unsigned": "UNSIGNED",
			\"update": "UPDATE",
			\"usage": "USAGE",
			\"use": "USE",
			\"using": "USING",
			\"utc_date": "UTC_DATE",
			\"utc_time": "UTC_TIME",
			\"utc_timestamp": "UTC_TIMESTAMP",
			\"values": "VALUES",
			\"varbinary": "VARBINARY",
			\"varchar": "VARCHAR",
			\"varcharacter": "VARCHARACTER",
			\"varying": "VARYING",
			\"when": "WHEN",
			\"where": "WHERE",
			\"while": "WHILE",
			\"with": "WITH",
			\"write": "WRITE",
			\"xor": "XOR",
			\"year_month": "YEAR_MONTH",
			\"zerofill": "ZEROFILL",
			\}

for [orig, repl] in items(b:replace_pair)
	exe "inorea <silent> <buffer> ".orig." <C-R>=SqlIab_ReplaceConditionally('".orig."', '".repl."')<CR>"
endfor
